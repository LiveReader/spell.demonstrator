/*
 * SPELL API
 * This is an experimental SPELL-Platform server.  You can find out more about SPELL at [https://spell-plattform.de](https://spell-plattform.de). There is no authentication.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@spell-plattform.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.33
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {NotitiaNodeShape} from './NotitiaNodeShape';
import {NotitiaTaxonomy} from './NotitiaTaxonomy';

/**
 * The NotitiaNode model module.
 * @module model/NotitiaNode
 * @version 1.0.0
 */
export class NotitiaNode {
  /**
   * Constructs a new <code>NotitiaNode</code>.
   * @alias module:model/NotitiaNode
   * @class
   * @param id {String} 
   */
  constructor(id) {
    this.id = id;
  }

  /**
   * Constructs a <code>NotitiaNode</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NotitiaNode} obj Optional instance to populate.
   * @return {module:model/NotitiaNode} The populated <code>NotitiaNode</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new NotitiaNode();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('shape'))
        obj.shape = NotitiaNodeShape.constructFromObject(data['shape']);
      if (data.hasOwnProperty('taxonomy'))
        obj.taxonomy = NotitiaTaxonomy.constructFromObject(data['taxonomy']);
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
NotitiaNode.prototype.id = undefined;

/**
 * @member {module:model/NotitiaNodeShape} shape
 */
NotitiaNode.prototype.shape = undefined;

/**
 * @member {module:model/NotitiaTaxonomy} taxonomy
 */
NotitiaNode.prototype.taxonomy = undefined;

